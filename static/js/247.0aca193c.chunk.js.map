{"version":3,"file":"static/js/247.0aca193c.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,gCAGJC,EAAkB,mCAAG,oGACTC,EAAAA,GAAAA,IAAU,GAAD,OAC3BF,EAAQ,oCAA4BD,IACvC,KAAD,EAFa,OAARI,EAAQ,yBAGPA,EAASC,KAAKC,SAAO,2CAC7B,kBAL8B,mCASlBC,EAAiB,mCAAG,WAAMC,GAAE,uFAChBL,EAAAA,GAAAA,IAAU,GAAD,OAAIF,EAAQ,iBAASO,EAAE,oBAAYR,IAAW,KAAD,EAA/D,OAARI,EAAQ,yBACPA,EAASC,MAAI,2CACrB,gBAH6B,sCAOjBI,EAAuB,mCAAG,WAAMC,GAAK,uFACzBP,EAAAA,GAAAA,IAAU,GAAD,OAC3BF,EAAQ,gCAAwBD,EAAO,kBAAUU,IACpD,KAAD,EAFa,OAARN,EAAQ,yBAGPA,EAASC,MAAI,2CACrB,gBALmC,sCASvBM,EAAO,mCAAG,WAAMH,GAAE,uFACNL,EAAAA,GAAAA,IAAU,GAAD,OAC3BF,EAAQ,kBAAUO,EAAE,4BAAoBR,EAAO,oBAClD,KAAD,EAFa,OAARI,EAAQ,yBAGPA,EAASC,MAAI,2CACrB,gBALmB,sCASPO,EAAU,mCAAG,WAAMJ,GAAE,uFACTL,EAAAA,GAAAA,IAAU,GAAD,OAC3BF,EAAQ,kBAAUO,EAAE,4BAAoBR,EAAO,2BAClD,KAAD,EAFa,OAARI,EAAQ,yBAGPA,EAASC,MAAI,2CACrB,gBALsB,qC,8ECMvB,UAxCa,WACX,OAAwBQ,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACdC,GAAUC,EAAAA,EAAAA,MAchB,IAZAC,EAAAA,EAAAA,YAAU,WACR,KACEP,EAAAA,EAAAA,IAAQK,GAASG,MAAK,SAAAC,GACpBL,EAAQK,EAAEN,KACZ,GAGF,CAFE,MAAOO,GACPC,QAAQC,IAAIF,EACd,CACF,GAAG,CAACL,IAEJM,QAAQC,IAAIT,IAEPA,EAAM,OAAO,KAKlB,OACE,4BACIA,EAAKU,SAAU,yDACjB,wBACGV,EAAKW,KAAI,gBAAGjB,EAAE,EAAFA,GAAIkB,EAAa,EAAbA,cAAeC,EAAY,EAAZA,aAAcC,EAAS,EAATA,UAAS,OACrD,2BACE,gBACEC,IAAKF,EAAY,UAVjB,mCAU0B,OAAGA,GAAY,UAThC,oCAUTG,IAAKJ,KAEP,kCAAUA,MACV,uCAAeE,OANRpB,EAOJ,QAKf,C","sources":["api/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8a5cfb4207c3746e6a8d5626ceb4bba0';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// запрос за популярными фильмами\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\n// запрос на информацию о выбраном фильме\n\nexport const fetchSelectedFilm = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\n// запрос о поиске фильма по названию\n\nexport const fetchSelectedMovieTitle = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\n// запрос о актерах выбраного фильма\n\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// запрос о отзывах про выбраный фильм\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { getCast } from '../../api/Api';\nimport { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const movieId = useOutletContext();\n\n  useEffect(() => {\n    try {\n      getCast(movieId).then(r => {\n        setCast(r.cast);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  console.log(cast);\n\n  if (!cast) return null;\n\n  const img = 'https://image.tmdb.org/t/p/w200';\n  const imageMissing = 'https://placehold.jp/200x300.png';\n\n  return (\n    <div>\n      {!cast.length && <p>Sorry! Information not found</p>}\n      <ul>\n        {cast.map(({ id, original_name, profile_path, character }) => (\n          <li key={id}>\n            <img\n              src={profile_path ? `${img}${profile_path}` : `${imageMissing}`}\n              alt={original_name}\n            />\n            <p>Name: {original_name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  id: PropTypes.number.isRequired,\n  original_name: PropTypes.string.isRequired,\n  profile_path: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n// async function getCredits() {\n//   try {\n//     const fetchCast = await getCast(movieId);\n//     setCast(fetchCast);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n// getCredits();\n"],"names":["API_KEY","BASE_URL","fetchPopularMovies","axios","response","data","results","fetchSelectedFilm","id","fetchSelectedMovieTitle","query","getCast","getReviews","useState","cast","setCast","movieId","useOutletContext","useEffect","then","r","error","console","log","length","map","original_name","profile_path","character","src","alt"],"sourceRoot":""}