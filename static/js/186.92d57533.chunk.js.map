{"version":3,"file":"static/js/186.92d57533.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,gCAGJC,EAAkB,mCAAG,oGACTC,EAAAA,GAAAA,IAAU,GAAD,OAC3BF,EAAQ,oCAA4BD,IACvC,KAAD,EAFa,OAARI,EAAQ,yBAGPA,EAASC,KAAKC,SAAO,2CAC7B,kBAL8B,mCASlBC,EAAiB,mCAAG,WAAMC,GAAE,uFAChBL,EAAAA,GAAAA,IAAU,GAAD,OAAIF,EAAQ,iBAASO,EAAE,oBAAYR,IAAW,KAAD,EAA/D,OAARI,EAAQ,yBACPA,EAASC,MAAI,2CACrB,gBAH6B,sCAOjBI,EAAuB,mCAAG,WAAMC,GAAK,uFACzBP,EAAAA,GAAAA,IAAU,GAAD,OAC3BF,EAAQ,gCAAwBD,EAAO,kBAAUU,IACpD,KAAD,EAFa,OAARN,EAAQ,yBAGPA,EAASC,MAAI,2CACrB,gBALmC,sCASvBM,EAAO,mCAAG,WAAMH,GAAE,uFACNL,EAAAA,GAAAA,IAAU,GAAD,OAC3BF,EAAQ,kBAAUO,EAAE,4BAAoBR,EAAO,oBAClD,KAAD,EAFa,OAARI,EAAQ,yBAGPA,EAASC,MAAI,2CACrB,gBALmB,sCASPO,EAAU,mCAAG,WAAMJ,GAAE,uFACTL,EAAAA,GAAAA,IAAU,GAAD,OAC3BF,EAAQ,kBAAUO,EAAE,4BAAoBR,EAAO,2BAClD,KAAD,EAFa,OAARI,EAAQ,yBAGPA,EAASC,MAAI,2CACrB,gBALsB,qC,8ECQvB,UA1CgB,WACd,OAA8BQ,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KACpBC,GAAUC,EAAAA,EAAAA,MAwBhB,OAtBAC,EAAAA,EAAAA,YAAU,WAER,KACEN,EAAAA,EAAAA,IAAWI,GAASG,MAAK,SAAAC,GACvBL,EAAWK,EAAEd,QACf,GAGF,CAFE,MAAOe,GACPC,QAAQC,IAAIF,EACd,CAUF,GAAG,CAACL,IAEJM,QAAQC,IAAIT,GAEPA,GAEH,4BACIA,EAAQU,SAAU,yDACpB,wBACGV,EAAQW,KAAI,gBAAGjB,EAAE,EAAFA,GAAIkB,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAAO,OACjC,2BACE,qCAAaD,MACb,uBAAIC,MAFGnB,EAGJ,SATQ,IAcvB,C","sources":["api/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8a5cfb4207c3746e6a8d5626ceb4bba0';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// запрос за популярными фильмами\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\n// запрос на информацию о выбраном фильме\n\nexport const fetchSelectedFilm = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\n// запрос о поиске фильма по названию\n\nexport const fetchSelectedMovieTitle = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\n// запрос о актерах выбраного фильма\n\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// запрос о отзывах про выбраный фильм\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { getReviews } from '../../api/Api';\nimport { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const movieId = useOutletContext();\n\n  useEffect(() => {\n    // async function requestFeedback() {\n    try {\n      getReviews(movieId).then(r => {\n        setReviews(r.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    //     const fetchReviews = await getReviews(movieId);\n\n    //     setReviews(fetchReviews);\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // }\n\n    // requestFeedback();\n  }, [movieId]);\n\n  console.log(reviews);\n\n  if (!reviews) return null;\n  return (\n    <div>\n      {!reviews.length && <p>Sorry! Information not found</p>}\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h5>author: {author}</h5>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n"],"names":["API_KEY","BASE_URL","fetchPopularMovies","axios","response","data","results","fetchSelectedFilm","id","fetchSelectedMovieTitle","query","getCast","getReviews","useState","reviews","setReviews","movieId","useOutletContext","useEffect","then","r","error","console","log","length","map","author","content"],"sourceRoot":""}